name: CI-CD

on:
  push:

jobs:

  ci:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14.x
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Setup Linter
        run: |
          curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s v1.24.0
          sudo cp ./bin/golangci-lint $GOPATH/bin/
      - name: Run Linter
        run: make lint
      - name: Run Tests
        run: make test

  cd:
    name: Continuous Delivery
    needs: ci
    if: startsWith(github.ref, "refs/tags/v")
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14.x
      - name: Build Binary
        run: make build
        env:
          VERSION: ${GITHUB_REF#refs/tags/}
      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: ""
          draft: false
          prerelease: false
      - name: Upload Release Linux Binary
        id: upload-release-asset-linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./bin/mono.linux-amd64
          asset_name: mono.linux-amd64
          asset_content_type: application/octet-stream
      - name: Upload Release Mac OS Binary
        id: upload-release-asset-darwin
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./bin/mono.darwin-amd64
          asset_name: mono.darwin-amd64
          asset_content_type: application/octet-stream
      - name: Upload Release Windows Binary
        id: upload-release-asset-windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./bin/mono.windows-amd64.exe
          asset_name: mono.windows-amd64
          asset_content_type: application/octet-stream